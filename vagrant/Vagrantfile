# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.boot_timeout = 600
  config.vm.provider "virtualbox" do |vb|
	  vb.gui = false
	  vb.cpus = 1
	  vb.memory = 512
	  # create a master VM before creating the linked clones
      vb.linked_clone = true
	  # Only use 50% of host CPU
	  vb.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
  end
  # Configure my own vagrant ssh key
  ## Generate ssh rsa key: `ssh-keygen -f vagrant-rsa -t rsa -C "vagrant"`
  config.ssh.insert_key = false
  config.ssh.keys_only = false
  config.ssh.private_key_path = ["vagrant-rsa", "~/.vagrant.d/insecure_private_key"]
  config.vm.provision "file", source: "vagrant-rsa.pub", destination: "~/.ssh/authorized_keys"
  config.vm.provision "file", source: "vagrant-rsa", destination: "~/.ssh/id_rsa"
  config.vm.provision "file", source: "ssh-config", destination: "~/.ssh/config"
  config.vm.provision "shell", inline: <<-SHELL
    chmod 600 ~vagrant/.ssh/config ~vagrant/.ssh/id_rsa
	# Enable Password login for sshd
	sed -i.bak 's/^PasswordAuthentication\ no/PasswordAuthentication\ yes/' /etc/ssh/sshd_config
	service sshd restart
  SHELL
  
  config.vm.define "cent7gui", primary: true do |cent7gui|
    #  name for VM
    cent7gui.vm.hostname = "centos7-mgt"
    cent7gui.vm.network "private_network", ip: "192.168.56.100"
    cent7gui.vm.box = "centos/7"
	cent7gui.vm.boot_timeout = 180
    cent7gui.vm.provider "virtualbox" do |vb|
	  # 2 x vCPU
	  vb.cpus = 2
      # Display the VirtualBox GUI when booting the machine
      #vb.gui = true
      # Customize the amount of memory on the VM:
      #vb.memory = 512
	  # vm name
	  vb.name = "centos7-mgt"
    end
	# hosts
	cent7gui.vm.provision "file", source: "localhosts", destination: "/var/tmp/hosts"
	cent7gui.vm.provision "shell", inline: <<-HOST
	  mv /etc/hosts /etc/hosts.bak
	  mv /var/tmp/hosts /etc/hosts
	HOST
    # simple configure
    cent7gui.vm.provision "shell", inline: <<-SHELL
      yum makecache
	  yum -y install git
	  git clone https://github.com/serheang/lca2022-ansible
	SHELL
  end
  
  config.vm.define "centos6" do |centos6|
    centos6.vm.box = "bento/centos-6"
    centos6.vm.hostname = "centos6"
    centos6.vm.network "private_network", ip: "192.168.56.104"
	centos6.vm.provider "virtualbox" do |vb|
	  # vm name
	  vb.name = "centos6-web"
	end
    centos6.vm.provision "shell", inline: <<-SHELL
	  yum makecache
	SHELL
  end
  
  config.vm.define "centos7" do |centos7|
    centos7.vm.box = "centos/7"
    centos7.vm.hostname = "centos7"
    centos7.vm.network "private_network", ip: "192.168.56.105"
	centos7.vm.provider "virtualbox" do |vb|
	  # Customize the amount of memory on the VM:
      vb.memory = 768
	  # vm name
	  vb.name = "centos7-web"
	end
	centos7.vm.provision "shell", inline: <<-SHELL
      yum makecache
	SHELL
  end

  config.vm.define "ubuntu18" do |ubuntu18|
    ubuntu18.vm.box = "ubuntu/bionic64"
    ubuntu18.vm.hostname = "ubuntu18"
    ubuntu18.vm.network "private_network", ip: "192.168.56.106"
	ubuntu18.vm.provider "virtualbox" do |vb|
	  # vm name
	  vb.name = "ubuntu18-web"
	end
	ubuntu18.vm.provision "shell",  inline: <<-SHELL
	  apt -y update
	SHELL
  end

  config.vm.define "ubuntu20" do |ubuntu20|
    ubuntu20.vm.box = "ubuntu/focal64"
    ubuntu20.vm.hostname = "ubuntu20"
    ubuntu20.vm.network "private_network", ip: "192.168.56.107"
	ubuntu20.vm.provider "virtualbox" do |vb|
	  # Customize the amount of memory on the VM:
      vb.memory = 768
	  # vm name
	  vb.name = "ubuntu20"
	end
    ubuntu20.vm.provision "shell",  inline: <<-SHELL
	  apt -y update
	SHELL
  end

  config.vm.define "ubuntu21", autostart: false do |ubuntu21|
    ubuntu21.vm.box = "ubuntu/hirsute64"
    ubuntu21.vm.hostname = "ubuntu21"
    ubuntu21.vm.network "private_network", ip: "192.168.56.108"
	ubuntu21.vm.provider "virtualbox" do |vb|
	  # vm name
	  vb.name = "ubuntu21"
	end
	ubuntu21.vm.provision "shell",  inline: <<-SHELL
	  apt -y update
	SHELL
  end  
  
  config.vm.define "awx", autostart: false do |awx|
      awx.vm.box = "centos/7"
      awx.vm.hostname = "awx"
      awx.vm.network "private_network", ip: "192.168.56.110"
	  awx.vm.provider "virtualbox" do |vb|
	  	# 2 x vCPU
	    vb.cpus = 2
        # Customize the amount of memory on the VM:
        vb.memory = 4096
	    # vm name
    	vb.name = "centos7-awx"
	  end
	  awx.vm.provision "file", source: "inventory", destination: "/var/tmp/"
	  awx.vm.provision "shell", inline: <<-SHELL
	  # Official steps: https://github.com/ansible/awx/blob/17.0.1/INSTALL.md
	  # The below steps are from https://howto.lintel.in/install-ansible-tower-awx-centos-7/
	  ## Install dependencies
	  yum -y install epel-release
	  yum remove python-docker-py
 	  ## Some extra python3 packages
	  yum -y install python3 libselinux-python3
	  yum install -y yum-utils device-mapper-persistent-data lvm2 ansible git python3-devel python3-pip python3-docker-py
	  pip3 install cryptography
      pip3 install jsonschema
      pip3 install docker-compose~=1.23.0
      pip3 install docker --upgrade
	  ## Do a softlink for docker-compose
	  ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
	  ## Install Docker
	  yum-config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
	  yum -y install docker-ce
	  systemctl enable docker
	  systemctl start docker
      ## Deploy AWX
	  git clone -b 17.1.0 https://github.com/ansible/awx.git
	  cd awx/installer
	  git checkout -b 17.1.0
	  cp /var/tmp/inventory .
	  sudo ansible-playbook -i inventory install.yml
    SHELL
  end
end